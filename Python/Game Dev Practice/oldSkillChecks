//
//
//function TargetGroundArea (numbers : Vector2) {
//	var skillNumber : int = numbers.x;
//	var fromButton : int = numbers.y;
//	while(playerAiming)	{
//		if((playerData.quickCast && !fromButton) || Input.GetMouseButtonDown(0) || Input.GetKeyDown(playerData.keySettings[13]))		{
//			var hit : RaycastHit;
//			var ray : Ray = Camera.main.ScreenPointToRay (Input.mousePosition);
//			var attemptedTarget : int;
//			if (Physics.Raycast (ray, hit, 100.0, clickLayer))			{
//				attemptedTarget = unitNameToNumber[hit.collider.tag];
//				
//				//if its unit thats not a structure or its the ground
//				if(attemptedTarget < 38 && (attemptedTarget < 3 || attemptedTarget > 6))				{
//					skillTargetLocations[1] = hit.point;
//					moveTarget[1] = skillTargetLocations[1];
//					clickTarget.position = moveTarget[1];
//					skillTargetLocations[1].y = 0.2;					
//					var relativePos : Vector3 = hit.point - targetObjects[1].transform.position;
//					if(relativePos.z != 0) {
//						var targetRotation : Quaternion = Quaternion.LookRotation(relativePos);
//						targetObjects[1].transform.rotation = targetRotation;
//						targetObjects[1].transform.rotation.x = 0;
//						targetObjects[1].transform.rotation.z = 0;
//					}				
//					playerAiming = false;
//					skills.seeking = true;
//					//stop basic attack
//					StopBasicAttack(1);
//					useSkill[1,skillNumber](1);			
//				}
//				//else if they clicked on a structure or wall
//				else if(playerData.quickCast) { playerAiming = false; break; }
//				else			{		yield;			}				
//			}
//			//else its something untargetable
//			else if(playerData.quickCast) { playerAiming = false; break; }
//			else			{		yield;			}
//		}
//		else if(Input.GetMouseButtonDown(1) || Input.GetKeyDown(playerData.keySettings[14]))		{		playerAiming = false;		}
//		else		{
//			//target indicator goes here
//			yield;
//		}
//	}
//}
//
//function TargetSummon (numbers : Vector2)	{
//	var skillNumber : int = numbers.x;
//	var fromButton : int = numbers.y;
//	while(playerAiming)	{
//		if((playerData.quickCast && !fromButton) || Input.GetMouseButtonDown(0) || Input.GetKeyDown(playerData.keySettings[13]))		{
//			var hit : RaycastHit;
//			var ray : Ray = Camera.main.ScreenPointToRay (Input.mousePosition);
//			var attemptedTarget : int;
//			if (Physics.Raycast (ray, hit, 100.0, clickLayer))			{
//				attemptedTarget = unitNameToNumber[hit.collider.tag];
//				
//				
//				//else if they clicked on a structure or wall
//				else if(playerData.quickCast) { playerAiming = false; break; }
//				else	{		yield;		}				
//			}
//			//else its something untargetable
//			else if(playerData.quickCast) { playerAiming = false; break; }
//			else	{		yield;		}
//		}
//		else if(Input.GetMouseButtonDown(1) || Input.GetKeyDown(playerData.keySettings[14]))		{
//			playerAiming = false;
//		}
//		else		{
//			//target indicator goes here
//			yield;
//		}
//	}
//	
//}
//
//function TargetEnemy (numbers : Vector2) {
//	var skillNumber : int = numbers.x;
//	var fromButton : int = numbers.y;
//	while(playerAiming)	{
//		if((playerData.quickCast && !fromButton) || Input.GetMouseButtonDown(0) || Input.GetKeyDown(playerData.keySettings[13]))		{
//			var hit : RaycastHit;
//			var ray : Ray = Camera.main.ScreenPointToRay (Input.mousePosition);
//			var attemptedTarget : int;
//			if (Physics.Raycast (ray, hit, 100.0, clickLayer))			{
//				attemptedTarget = unitNameToNumber[hit.collider.tag];
//				
//				//if its an enemy unit thats not a structure
//				if(attemptedTarget % 2 == 0 && attemptedTarget < 37 && (attemptedTarget < 3 || attemptedTarget > 6))				{
//					currentTargets[1] = attemptedTarget;
//					viewTarget = attemptedTarget;
//					skillTargetLocations[1] = hit.point;								
//					var relativePos : Vector3 = skillTargetLocations[1]  - targetObjects[1].transform.position;
//					if(relativePos.z != 0) {
//						var targetRotation : Quaternion = Quaternion.LookRotation(relativePos);
//						targetObjects[1].transform.rotation = targetRotation;
//						targetObjects[1].transform.rotation.x = 0;
//						targetObjects[1].transform.rotation.z = 0;
//					}		
//					playerAiming = false;
//					skills.seeking = true;	
//					//stop basic attack
//					StopBasicAttack(1);				
//					useSkill[1,skillNumber](1);
//				}
//				//else if they clicked on a structure or wall/ground
//				else if(playerData.quickCast) { playerAiming = false; break; }
//				else		{		yield;		}				
//			}
//			//else its something untargetable
//			else if(playerData.quickCast) { playerAiming = false; break; }
//			else		{		yield;			}
//		}
//		else if(Input.GetMouseButtonDown(1) || Input.GetKeyDown(playerData.keySettings[14]))		{
//			playerAiming = false;
//		}
//		else		{
//			//target indicator goes here
//			yield;
//		}
//	}
//}
//
//function TargetCharacter (numbers : Vector2) {
//	var skillNumber : int = numbers.x;
//	var fromButton : int = numbers.y;
//	while(playerAiming)	{
//		if((playerData.quickCast && !fromButton) || Input.GetMouseButtonDown(0) || Input.GetKeyDown(playerData.keySettings[13]))		{
//			var hit : RaycastHit;
//			var ray : Ray = Camera.main.ScreenPointToRay (Input.mousePosition);
//			var attemptedTarget : int;
//			if (Physics.Raycast (ray, hit, 100.0, clickLayer))			{
//				attemptedTarget = unitNameToNumber[hit.collider.tag];
//				
//				//if its the enemy character
//				if(attemptedTarget == 2)				{
//					currentTargets[1] = attemptedTarget;
//					viewTarget = attemptedTarget;
//					skillTargetLocations[1] = hit.point;					
//					var relativePos : Vector3 = skillTargetLocations[1]  - targetObjects[1].transform.position;
//					if(relativePos.z != 0) {
//						var targetRotation : Quaternion = Quaternion.LookRotation(relativePos);
//						targetObjects[1].transform.rotation = targetRotation;
//						targetObjects[1].transform.rotation.x = 0;
//						targetObjects[1].transform.rotation.z = 0;
//					}
//					playerAiming = false;
//					skills.seeking = true;
//					//stop basic attack
//					StopBasicAttack(1);
//					useSkill[1,skillNumber](1);
//				}
//				//else if they clicked on a structure or wall
//				else if(playerData.quickCast) { playerAiming = false; break; }
//				else	{	yield;	}				
//			}
//			//else its something untargetable
//			else if(playerData.quickCast) { playerAiming = false; break; }
//			else		{	yield;	}
//		}
//		else if(Input.GetMouseButtonDown(1) || Input.GetKeyDown(playerData.keySettings[14]))		{
//			playerAiming = false;
//		}
//		else		{
//			//target indicator goes here
//			yield;
//		}
//	}
//}
